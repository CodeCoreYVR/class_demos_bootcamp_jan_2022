@import 'normalize.css';
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&family=Roboto:wght@100&family=Source+Sans+Pro:wght@600&display=swap');

* {
    border: thin dotted greenyellow;
}

input[type="textarea"] {
    width: 300px;
    height: 200px;
    background-color: brown;
}

*[type=hidden]{
    display: none;
}

.div-3 {
    float: right;
}

img {
    width: 500px;
    height: 400px;
    float: right;
}

/* Responsive image */
/* img {
    max-width: 100%;
    height: auto;
} */

.container {
    overflow: auto;
}

body {
    background-image: linear-gradient(120deg, #84fab0 0%, #8fd3f4 100%);
}

p {
    font-family: 'Roboto', sans-serif;
}

/*================= Flexbox CSS: ================================*/

/* Grab the flex-container which is tyhe parent element */
/* Any element with the property set to display:flex is considered a "Flex Container" */

.flex-me {
    display: flex;
    /* flex-direction: row;   */
    /* row is the default direction */
    /* flex-direction: column; */
    /* Flex-direction is used to set the flow/main-axis of the flex-items */
    /* By default flex-direction is set to row (left-right) */
    flex-wrap: wrap;
    /* flex-flow: column wrap; */
    /* justify-content: center; */
    justify-content: flex-end;
    /* Justify-content is used to align item within the main axis */
    align-items: center;
    /* Align-items is used to align item within the cross axis */

    min-height: 150px;
    background-color: darkgrey;
    /* gap: 30px; */
    column-gap: 40px;
}


#num-two {
   /* an element can only be a flex-item if its parent is a flex container */
   /* flex-items have their own properties as well: */
   order: 1;
   /* default is 0 and in order of placement in html document; can be negative number as well; 
   the smaller the number, the higher the order priority */
   flex-grow: 5; 
   /* default is 0; cannot be negative number; grows relative to the size of the other items */
   /* flex-shrink: 3; will shrink the item content */
   /* default is 1;
   align-self: flex-end;
   /* align-self also uses cross-axis */
}

.flex-me>div {
    order: 0;
    flex-grow: 1;
}

#num-six {
    flex-grow: 4;
}

